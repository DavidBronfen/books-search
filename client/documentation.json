{
    "pipes": [],
    "interfaces": [
        {
            "name": "IAppState",
            "id": "interface-IAppState-0e363b90a4a9be23d4076669f82c9060fb69bdf3a10c7921d99d2b219640d7186a88be604d68de9490131c087e7442e87a46b28e039bbc243473e9db7db070ef",
            "file": "src/app/store/state.index.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ActionReducerMap } from '@ngrx/store';\n\nimport * as fromBooks from '../feed/store/books.reducer';\nimport * as fromAuth from '../auth/store/auth.reducer';\nimport * as fromWishlist from '../wishlist/store/wishlist.reducer';\n\nexport interface IAppState {\n  books: fromBooks.State;\n  auth: fromAuth.State;\n  wishlist: fromWishlist.State;\n}\n\nexport const reducers: ActionReducerMap<IAppState> = {\n  books: fromBooks.reducer,\n  auth: fromAuth.reducer,\n  wishlist: fromWishlist.reducer\n};\n",
            "properties": [
                {
                    "name": "auth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "fromAuth.State",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "books",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "fromBooks.State",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "wishlist",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "fromWishlist.State",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IBookItemModel",
            "id": "interface-IBookItemModel-2450d97f159d97bec52b7155293b1fd0625a1555612a9a4b7362c4600bcbfe26cd97081e0551d521b5acc635ff2081c057f1dda2351539219ce48ce31052939e",
            "file": "src/app/feed/models/books.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ISearchRequestModel {\n  term: string;\n}\n\nexport interface ISearchResponseModel extends ISearchRequestModel {\n  booksList: IBookItemModel[];\n}\n\nexport interface IBookItemModel {\n  id: string;\n  title: string;\n  subtitle: string;\n  authors: string;\n  description: string;\n  image: string;\n  publishedDate: string;\n  pageCount: number;\n  rating: number;\n}\n\nexport interface IBooksModel extends ISearchResponseModel {\n  isLoading: boolean;\n  isError: boolean;\n}\n",
            "properties": [
                {
                    "name": "authors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "pageCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "publishedDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "rating",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IBooksModel",
            "id": "interface-IBooksModel-2450d97f159d97bec52b7155293b1fd0625a1555612a9a4b7362c4600bcbfe26cd97081e0551d521b5acc635ff2081c057f1dda2351539219ce48ce31052939e",
            "file": "src/app/feed/models/books.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ISearchRequestModel {\n  term: string;\n}\n\nexport interface ISearchResponseModel extends ISearchRequestModel {\n  booksList: IBookItemModel[];\n}\n\nexport interface IBookItemModel {\n  id: string;\n  title: string;\n  subtitle: string;\n  authors: string;\n  description: string;\n  image: string;\n  publishedDate: string;\n  pageCount: number;\n  rating: number;\n}\n\nexport interface IBooksModel extends ISearchResponseModel {\n  isLoading: boolean;\n  isError: boolean;\n}\n",
            "properties": [
                {
                    "name": "isError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "ISearchResponseModel"
        },
        {
            "name": "ISearchRequestModel",
            "id": "interface-ISearchRequestModel-2450d97f159d97bec52b7155293b1fd0625a1555612a9a4b7362c4600bcbfe26cd97081e0551d521b5acc635ff2081c057f1dda2351539219ce48ce31052939e",
            "file": "src/app/feed/models/books.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ISearchRequestModel {\n  term: string;\n}\n\nexport interface ISearchResponseModel extends ISearchRequestModel {\n  booksList: IBookItemModel[];\n}\n\nexport interface IBookItemModel {\n  id: string;\n  title: string;\n  subtitle: string;\n  authors: string;\n  description: string;\n  image: string;\n  publishedDate: string;\n  pageCount: number;\n  rating: number;\n}\n\nexport interface IBooksModel extends ISearchResponseModel {\n  isLoading: boolean;\n  isError: boolean;\n}\n",
            "properties": [
                {
                    "name": "term",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ISearchResponseModel",
            "id": "interface-ISearchResponseModel-2450d97f159d97bec52b7155293b1fd0625a1555612a9a4b7362c4600bcbfe26cd97081e0551d521b5acc635ff2081c057f1dda2351539219ce48ce31052939e",
            "file": "src/app/feed/models/books.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ISearchRequestModel {\n  term: string;\n}\n\nexport interface ISearchResponseModel extends ISearchRequestModel {\n  booksList: IBookItemModel[];\n}\n\nexport interface IBookItemModel {\n  id: string;\n  title: string;\n  subtitle: string;\n  authors: string;\n  description: string;\n  image: string;\n  publishedDate: string;\n  pageCount: number;\n  rating: number;\n}\n\nexport interface IBooksModel extends ISearchResponseModel {\n  isLoading: boolean;\n  isError: boolean;\n}\n",
            "properties": [
                {
                    "name": "booksList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IBookItemModel[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "ISearchRequestModel"
        },
        {
            "name": "IWishListBookItemModel",
            "id": "interface-IWishListBookItemModel-015635175f1471fee79278463e1afcc767b99d13b8869b6e6b8f07f92f1e8f69f9d9e471fe65cdef29f8df4755195ce757a552ca3c8661417d3cbb041b782030",
            "file": "src/app/wishlist/models/wishlist.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IWishListBookItemModel {\n  id: string;\n  title: string;\n  image: string;\n}\n\nexport interface IWishListModel {\n  myList: IWishListBookItemModel[];\n}\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "image",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IWishListModel",
            "id": "interface-IWishListModel-015635175f1471fee79278463e1afcc767b99d13b8869b6e6b8f07f92f1e8f69f9d9e471fe65cdef29f8df4755195ce757a552ca3c8661417d3cbb041b782030",
            "file": "src/app/wishlist/models/wishlist.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IWishListBookItemModel {\n  id: string;\n  title: string;\n  image: string;\n}\n\nexport interface IWishListModel {\n  myList: IWishListBookItemModel[];\n}\n",
            "properties": [
                {
                    "name": "myList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IWishListBookItemModel[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ShapesModel",
            "id": "interface-ShapesModel-f1aa9564f28721452f98288b861d36a2029680eff297dca7e6ca381b3215b49e7180dfccd9df936d432294720fdad5a0d4beefb4cb354bf69006848c544a7327",
            "file": "src/app/auth/models/shape.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ShapesModel {\n  left: string;\n  width: string;\n  height: string;\n  animationDelay: string;\n  animationDuration: string;\n}\n",
            "properties": [
                {
                    "name": "animationDelay",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "animationDuration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "height",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "left",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthEffect",
            "id": "injectable-AuthEffect-aa7df71be579e5d3b14b9e2cd6f07ba2571c90b0cf255e40a6a63e914a0049569b40c618ccae3d94b9b2a2cb97635630ed23fa585482bec0acfa23fdbf6f1318",
            "file": "src/app/auth/store/auth.effect.ts",
            "properties": [
                {
                    "name": "loginUser$",
                    "defaultValue": "createEffect(() => {\n    return this.actions$.pipe(\n      ofType(AuthActions.LoginUser),\n      concatLatestFrom(() => this.store.select(getName)),\n      tap(([_, name]) => {\n        if (name) {\n          this.router.navigateByUrl('feed');\n        }\n      }),\n      catchError((err) => of(err))\n    );\n  }, { dispatch: false })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Action>",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Actions, concatLatestFrom, createEffect, ofType } from '@ngrx/effects';\nimport { Action, Store } from '@ngrx/store';\nimport { Observable, of } from 'rxjs';\n\nimport * as AuthActions from './auth.actions';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { getName } from './auth.reducer';\nimport { Router } from '@angular/router';\n\n@Injectable({providedIn: 'root'})\nexport class AuthEffect {\n  constructor(\n    private actions$: Actions,\n    private store: Store,\n    private router: Router,\n  ) {}\n\n  loginUser$: Observable<Action> = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(AuthActions.LoginUser),\n      concatLatestFrom(() => this.store.select(getName)),\n      tap(([_, name]) => {\n        if (name) {\n          this.router.navigateByUrl('feed');\n        }\n      }),\n      catchError((err) => of(err))\n    );\n  }, { dispatch: false });\n}\n\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "BooksEffect",
            "id": "injectable-BooksEffect-b189530691df0d2d177a610b5a5b2d752dc0923f17b41ce193f2e0b303a59c77b18841ab729b6c03c062139c9b73fd011c7d70447fff2253e48e092ad37da259",
            "file": "src/app/feed/store/books.effect.ts",
            "properties": [
                {
                    "name": "searchBooks$",
                    "defaultValue": "createEffect(() => {\n    return this.actions$.pipe(\n      ofType(BooksActions.SearchBooks),\n      map(action => action.term),\n      switchMap(term =>\n        this.booksService.searchBooksAPI(term).pipe(\n          map(response => BooksActions.SearchBooksSuccess(response)),\n          catchError((error: Error) => of(BooksActions.SearchBooksFailed({ error })))\n        )\n      )\n    );\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Action>",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { Action } from '@ngrx/store';\n\nimport * as BooksActions from './books.actions';\nimport { BooksService } from '../services/books.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksEffect {\n  constructor(\n    private actions$: Actions,\n    private booksService: BooksService\n    ) {}\n\n  searchBooks$: Observable<Action> = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(BooksActions.SearchBooks),\n      map(action => action.term),\n      switchMap(term =>\n        this.booksService.searchBooksAPI(term).pipe(\n          map(response => BooksActions.SearchBooksSuccess(response)),\n          catchError((error: Error) => of(BooksActions.SearchBooksFailed({ error })))\n        )\n      )\n    );\n  });\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "booksService",
                        "type": "BooksService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "booksService",
                        "type": "BooksService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "BooksService",
            "id": "injectable-BooksService-01d2d5f34b1d6aa2b1d3f385512be36dd5bd5c7be9f6acab875cd9da595f6b079e468b2066dba90efc113b2d1d3b0d0cef4d8fefd663d8a5b472177b3540cb49",
            "file": "src/app/feed/services/books.service.ts",
            "properties": [
                {
                    "name": "serverURL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "searchBooksAPI",
                    "args": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ISearchResponseModel>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ISearchResponseModel } from '../models/books.model';\n\nimport { environment } from '../../../environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BooksService {\n  serverURL;\n  constructor(private http: HttpClient) {\n    this.serverURL = environment.serverUrl;\n  }\n\n  searchBooksAPI(term: string): Observable<ISearchResponseModel> {\n    const params = new HttpParams().set('term', term);\n    return this.http.get<ISearchResponseModel>(`${this.serverURL}/search-books`, { params });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "UserAccessGuard",
            "id": "injectable-UserAccessGuard-e729b0bf5823f807bf6f55cc587e8b6adf0b1e5ddcb6c1664130199b2d6a917fdeacef9a3adc16eb03daec3932ef9dd177b026f9f87f1f700ecf4897094f29e7",
            "file": "src/app/auth/guards/user-access.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<boolean>",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { getName } from '../store/auth.reducer';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAccessGuard implements CanActivate {\n  constructor(\n    private store: Store,\n    private router: Router,\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> {\n    return this.store.select(getName).pipe(\n      map((name: string) => {\n        if (!name) {\n          this.router.navigateByUrl('');\n          return false;\n        }\n        return true;\n      })\n    );\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-d83b95cb897fd7f1ecc7216a31a9167598810a902c9c43ec11b6a93965548994186b900fe348e64bdf35a97b36d2fdb26731097dc1738e7f73bc67d2d432a47c",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "ImageDirective",
            "id": "directive-ImageDirective-0ace9842afce47ab602fb918d3cacdb1a5ece69ee62de120c52c6fe854ade4ac0f5ff31db26d62a2a4c30b0b3e9c1271b1cb1e2307541382b3ec57ed4944d04d",
            "file": "src/app/feed/directives/image.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  Directive,\n  HostListener,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\n@Directive({\n  selector: 'img[appLoadingCheck]'\n})\nexport class ImageDirective {\n  @Output() loaded = new EventEmitter();\n\n  constructor() {}\n\n  @HostListener('load')\n  @HostListener('error')\n  imageLoaded(): void {\n    this.loaded.emit();\n    this.loaded.complete();\n  }\n}\n",
            "selector": "img[appLoadingCheck]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "loaded",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "error",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18
                },
                {
                    "name": "load",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "imageLoaded",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'load'"
                        },
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'error'"
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            }
        }
    ],
    "components": [
        {
            "name": "AnimatedBackgroundComponent",
            "id": "component-AnimatedBackgroundComponent-def751355f6ebb95ea4cf9068e12a38c8e16f13203ae655920b3d489dd47cfd33bb82c8becc47e9504453eb50194e856f2bde5c3b1d891bf1650475133bb698e",
            "file": "src/app/auth/components/animated-background/animated-background.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-animated-background",
            "styleUrls": [
                "./animated-background.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./animated-background.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "shapes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ShapesModel[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "createShapes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "randomNumber",
                    "args": [
                        {
                            "name": "min",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "max",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "min",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "max",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ShapesModel } from '../../models/shape.model';\n\n@Component({\n  selector: 'app-animated-background',\n  templateUrl: './animated-background.component.html',\n  styleUrls: ['./animated-background.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AnimatedBackgroundComponent implements OnInit {\n\n  shapes: ShapesModel[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.createShapes();\n  }\n\n  // Create 15 shapes with random style parameters.\n  createShapes(): void {\n    for (let i = 0; i < 8; i++) {\n      const shapeDimension = `${this.randomNumber(i * 10, 150)}px`;\n      const shapeObj: ShapesModel = {\n        left: `${this.randomNumber(i, 85)}%`,\n        width: shapeDimension,\n        height: shapeDimension,\n        animationDelay: `${this.randomNumber(0, 8)}s`,\n        animationDuration: `${this.randomNumber(10, 50)}s`,\n      };\n      this.shapes.push(shapeObj);\n    }\n  }\n\n  // Generate a random integer.\n  randomNumber(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/styles/colors\";\n\n:host {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(to right, $dark-blue, $grey);\n\n  .shapes {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n    margin: 0;\n    padding: 0;\n\n    li {\n      position: absolute;\n      display: block;\n      list-style: none;\n      width: 20px;\n      height: 20px;\n      background: $transparent-white;\n      animation: animate 25s linear infinite;\n      bottom: -250px;\n    }\n  }\n\n  @keyframes animate {\n    0% {\n      transform: translateY(0) rotate(0deg);\n      opacity: 1;\n      border-radius: 0;\n    }\n\n    100% {\n      transform: translateY(-1000px) rotate(720deg);\n      opacity: 0;\n      border-radius: 50%;\n    }\n  }\n}\n",
                    "styleUrl": "./animated-background.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ul class=\"shapes\">\n  <li\n    *ngFor=\"let item of shapes\"\n    [ngStyle]=\"{\n      'left': item.left,\n      'height': item.height,\n      'width': item.width,\n      'animation-duration': item.animationDuration,\n      'animation-delay': item.animationDelay\n    }\"\n  ></li>\n</ul>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-8c3755015029eae27dc31a4883d64345a2422b7c9ffee192f39ee287e41e530dfb8e4ffa31e44ffd11265c76a9e4c4b5ba99edc3084f23b6a73dba739ce2099a",
            "file": "src/app/app.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'esquare-books'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  title = 'esquare-books';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: block;\n  width: 100%;\n  height: 100%;\n}\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "BookCardComponent",
            "id": "component-BookCardComponent-f398fcf14b8c5b19f159cffcfb23f41acb9d3e3e3b92557f29e04222e8a7b0466fc67566f88b6455d8042c899afeffcb06000783dee70108d68b7f2377867c0d",
            "file": "src/app/feed/components/book-card/book-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-book-card",
            "styleUrls": [
                "./book-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./book-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "book",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "IBookItemModel",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "imageIsLoaded",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadingImage",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "placeholderImage",
                    "defaultValue": "'assets/no_image.jpg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "imageLoaded",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\n\nimport { IBookItemModel } from '../../models/books.model';\n\n@Component({\n  selector: 'app-book-card',\n  templateUrl: './book-card.component.html',\n  styleUrls: ['./book-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BookCardComponent {\n  @Input() book: IBookItemModel;\n  @Output() imageIsLoaded: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  placeholderImage = 'assets/no_image.jpg';\n  loadingImage = true;\n\n  constructor(public elementRef: ElementRef) {}\n\n  imageLoaded(): void {\n    this.loadingImage = false;\n    this.imageIsLoaded.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/styles/colors\";\n\n:host {\n  ::ng-deep {\n    .mat-card {\n      cursor: pointer;\n      transition: background-color .2s linear;\n      &:hover {\n        background-color: lighten($green, 20%);\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./book-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"content\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>{{book.title}}</mat-card-title>\n      <mat-card-subtitle>{{book.subtitle}}</mat-card-subtitle>\n      <mat-card-subtitle>Authors: {{book.authors}}</mat-card-subtitle>\n    </mat-card-header>\n    <img\n      appLoadingCheck\n      mat-card-image\n      (loaded)=\"imageLoaded()\"\n      [src]=\"book.image ? book.image : placeholderImage\"\n      [ngStyle]=\"{ visibility: loadingImage ? 'hidden' : '' }\"\n      alt=\"Photo of {{book.title}}\">\n    <img\n      *ngIf=\"loadingImage\"\n      mat-card-image\n      src=\"assets/image-loader.gif\"\n      alt=\"Image loader spinner\">\n    <mat-card-content>\n      <p>{{book.description | slice:0:200}}...</p>\n    </mat-card-content>\n  </mat-card>\n</div>\n"
        },
        {
            "name": "BookDetailsComponent",
            "id": "component-BookDetailsComponent-cd53362e15662e094eee4989a52dd3c76a4ad0648686f675dec4455aeaa7f83075763e6ded542ae761ef29cefd36146a661be43933ddb7428119a4d464ae99bd",
            "file": "src/app/feed/components/book-details/book-details.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-book-details",
            "styleUrls": [
                "./book-details.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./book-details.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "book",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IBookItemModel",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "Inject",
                            "stringifiedArguments": "MAT_DIALOG_DATA"
                        }
                    ],
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dialogRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialogRef<BookDetailsComponent>",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isItemInWishlist$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "addToWishList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeToWishList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ChangeDetectionStrategy, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { IBookItemModel } from '../../models/books.model';\nimport { Store } from '@ngrx/store';\nimport { IWishListBookItemModel } from '../../../wishlist/models/wishlist.model';\nimport { AddToWishlist, RemoveFromWishlist } from '../../../wishlist/store/wishlist.actions';\nimport { Observable } from 'rxjs';\nimport { isItemInWishlist } from '../../../wishlist/store/wishlist.reducer';\n\n@Component({\n  selector: 'app-book-details',\n  templateUrl: './book-details.component.html',\n  styleUrls: ['./book-details.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BookDetailsComponent implements OnInit {\n  isItemInWishlist$: Observable<boolean>;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public book: IBookItemModel,\n    public dialogRef: MatDialogRef<BookDetailsComponent>,\n    private store: Store\n  ) { }\n\n  ngOnInit(): void {\n    this.isItemInWishlist$ = this.store.select(isItemInWishlist(this.book.id));\n  }\n\n  closeDialog(): void {\n    this.dialogRef.close();\n  }\n\n  addToWishList(): void {\n    const bookToWishList: IWishListBookItemModel = {\n      id: this.book.id,\n      title: this.book.title,\n      image: this.book.image\n    };\n\n    this.store.dispatch(AddToWishlist(bookToWishList));\n    this.closeDialog();\n  }\n\n\n  removeToWishList(): void {\n    this.store.dispatch(RemoveFromWishlist({id: this.book.id}));\n    this.closeDialog();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/styles/colors\";\n\n:host {\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  width: 60vw;\n  max-width: 960px;\n  max-height: 65vh;\n\n  .close {\n    top: -24px;\n    right: -24px;\n    position: absolute;\n    cursor: pointer;\n    color: $olive-grey;\n  }\n\n  h1, h3 { margin: 0; }\n\n  h1 { color: $green; }\n\n  h3 {\n    color: $olive-grey;\n    margin-top: 8px;\n  }\n\n  .extra-details {\n    display: flex;\n    align-items: center;\n    color: $olive-grey;\n    margin-top: 16px;\n    padding: 8px 0;\n    border-top: 1px solid;\n    border-bottom: 1px solid;\n\n    p {\n      text-indent: 0;\n      font-size: .8rem;\n      padding-left: 16px;\n      padding-right: 16px;\n      border-left: 1px solid;\n      display: inline-block;\n\n      span {\n        font-weight: 500;\n      }\n\n      &:first-child {\n        padding-left: 8px;\n        border-left: none;\n      }\n\n      &:last-child {\n        padding-right: 8px;\n      }\n    }\n\n    ::ng-deep .mat-mini-fab {\n      background: $green;\n      width: 32px;\n      height: 32px;\n      margin-left: auto;\n\n      .mat-button-wrapper {\n        padding: 0;\n        display: flex;\n        justify-content: center;\n\n        .mat-icon { color: $smoke-white; }\n      }\n\n      &.remove { background: $red; }\n    }\n\n  }\n\n  p {\n    color: #3b3a36;\n    font-size: 18px;\n    line-height: 1.5;\n    overflow-y: auto;\n    padding-right: 16px;\n\n    &::-webkit-scrollbar-track {\n      background-color: $stone-white;\n    }\n\n    &::-webkit-scrollbar {\n      width: 8px;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background-color: $green;\n      border-radius: 20px;\n      border: 3px solid $green;\n    }\n  }\n\n}\n\n::ng-deep .book-details {\n  .mat-dialog-container {\n    background: $smoke-white;\n    padding: 32px;\n  }\n}\n",
                    "styleUrl": "./book-details.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "book",
                        "type": "IBookItemModel",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<BookDetailsComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "book",
                        "type": "IBookItemModel",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialogRef",
                        "type": "MatDialogRef<BookDetailsComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-icon\n  class=\"close\"\n  (click)=\"closeDialog()\">close</mat-icon>\n\n  <h1 *ngIf=\"book.title\">{{book.title}}</h1>\n  <h3 *ngIf=\"book.subtitle\">{{book.subtitle}}</h3>\n\n<div class=\"extra-details\">\n  <p *ngIf=\"book.authors\">\n    <span>Authors: </span>\n    {{book.authors}}\n  </p>\n  <p *ngIf=\"book.publishedDate\">\n    <span>Published on: </span>\n    {{book.publishedDate}}\n  </p>\n  <p *ngIf=\"book.rating\">\n    <span>Rating: </span>\n    {{book.rating}}\n  </p>\n  <p *ngIf=\"book.pageCount\">\n    <span>Pages: </span>\n    {{book.pageCount}}\n  </p>\n\n  <button\n    *ngIf=\"(isItemInWishlist$ | async) === false\"\n    mat-mini-fab\n    matTooltip=\"Add to wish list\"\n    (click)=\"addToWishList()\">\n    <mat-icon>add</mat-icon>\n  </button>\n  <button\n    *ngIf=\"isItemInWishlist$ | async\"\n    mat-mini-fab\n    matTooltip=\"Remove from wish list\"\n    class=\"remove\"\n    (click)=\"removeToWishList()\">\n    <mat-icon>remove</mat-icon>\n  </button>\n</div>\n<p>{{book.description}}</p>\n"
        },
        {
            "name": "BooksListComponent",
            "id": "component-BooksListComponent-57c93cad7bee161ea3791f53a9e8caca1d01526cacbda234a99475a2b63270af9cda39e6d0565c85c81954ced8e023d6522db12903f6dbdb9e67595559633989",
            "file": "src/app/feed/components/books-list/books-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-books-list",
            "styleUrls": [
                "./books-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./books-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bookCards",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<BookCardComponent>",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "BookCardComponent"
                        }
                    ]
                },
                {
                    "name": "books$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<IBookItemModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDialog",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "getBooksInfo",
                    "args": [
                        {
                            "name": "book",
                            "type": "IBookItemModel",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "book",
                            "type": "IBookItemModel",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onResize",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resizeAllGridItems",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resizeGridItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showNoResults",
                    "args": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showResults",
                    "args": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showWelcome",
                    "args": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  QueryList,\n  Renderer2,\n  ViewChildren\n} from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { getBooksList, isLoadingBooks } from '../../store/books.reducer';\nimport { IBookItemModel } from '../../models/books.model';\nimport { BookCardComponent } from '../book-card/book-card.component';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { BookDetailsComponent } from '../book-details/book-details.component';\n\n@Component({\n  selector: 'app-books-list',\n  templateUrl: './books-list.component.html',\n  styleUrls: ['./books-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '(window:resize)': 'onResize()'\n  }\n})\nexport class BooksListComponent implements OnInit {\n\n  @ViewChildren(BookCardComponent) bookCards: QueryList<BookCardComponent>;\n\n  books$: Observable<IBookItemModel[]>;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private store: Store,\n    private renderer: Renderer2,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.books$ = this.store.select(getBooksList);\n    this.loading$ = this.store.select(isLoadingBooks);\n  }\n\n  onResize(): void {\n    this.resizeAllGridItems();\n  }\n\n  resizeAllGridItems(): void {\n    // Do nothing when one of the cards is still loading an image.\n    if (this.bookCards.some(card => card.loadingImage)) {\n      return;\n    }\n    this.bookCards.map(card => this.resizeGridItem(card.elementRef.nativeElement));\n  }\n\n  resizeGridItem(item: HTMLElement): void {\n    const grid = document.getElementsByClassName('grid')[0];\n    const rowHeight = parseInt(window.getComputedStyle(grid).getPropertyValue('grid-auto-rows'), 10);\n    const rowGap = parseInt(window.getComputedStyle(grid).getPropertyValue('grid-row-gap'), 10);\n    const rowSpan = Math.ceil((item.querySelector('.content')\n      .getBoundingClientRect().height + rowGap) / (rowHeight + rowGap));\n\n    this.renderer.setStyle(item, 'grid-row-end', `span ${rowSpan}`);\n  }\n\n  showWelcome(data: { books: IBookItemModel[] | null; loading: boolean | null }): boolean {\n    return data.books === null && !data.loading;\n  }\n\n  showNoResults(data: { books: IBookItemModel[] | null; loading: boolean | null }): boolean {\n    return data.books && data.books.length === 0 && !data.loading;\n  }\n\n  showResults(data: { books: IBookItemModel[] | null; loading: boolean | null }): boolean {\n    return data.books && data.books.length && !data.loading;\n  }\n\n  getBooksInfo(book: IBookItemModel): void {\n    this.dialog.open(BookDetailsComponent, {\n      panelClass: 'book-details',\n      disableClose: true,\n      data: book\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 25px 50px;\n\n  .grid {\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    grid-auto-rows: 0;\n  }\n}\n",
                    "styleUrl": "./books-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngIf=\"{\n  loading: loading$ | async,\n  books: books$ | async\n} as data\">\n\n  <div *ngIf=\"data.loading\">\n    <img src=\"assets/spinner.gif\" alt=\"Searching books loader\">\n  </div>\n\n  <div *ngIf=\"showWelcome(data)\">\n    <img src=\"assets/book1.gif\" alt=\"Welcome gif\">\n  </div>\n\n  <div *ngIf=\"showNoResults(data)\">\n    <img src=\"assets/try-again.gif\" alt=\"No results found\">\n  </div>\n\n  <div class=\"grid\" *ngIf=\"showResults(data)\">\n    <app-book-card\n      *ngFor=\"let book of data.books\"\n      [book]=\"book\"\n      (click)=\"getBooksInfo(book)\"\n      (imageIsLoaded)=\"resizeAllGridItems()\">\n    </app-book-card>\n  </div>\n\n</ng-container>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-8de63b083e88fd946ab71be59573a8d8a685790837d8b911dc3b96c0df9393ff33f4843b33f7fdc4b4e950c5f7849ebf947f59fbdacdf0629a36cc07a151e320",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\" {\n   'background-color': backgroundColor,\n   color: color\n  }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "color",
                    "defaultValue": "'#333'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat is the text color\n",
                    "description": "<p>What is the text color</p>\n",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 807,
                            "end": 820,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 808,
                                "end": 816,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 49,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 41,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 55,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\" {\n    'background-color': backgroundColor,\n    color: color\n   }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * What is the text color\n   */\n  @Input()\n  color = '#333';\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 57
                    }
                }
            }
        },
        {
            "name": "FeedComponent",
            "id": "component-FeedComponent-b182ef1f7d4fdcda18a3f0b0fb8598379a85a3dd6e7af945392c23225937e8b132a1a4e38b326b1606382946f1adac069ff15b755db163e085ca1d92fe3f13e9",
            "file": "src/app/feed/components/feed/feed.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-feed",
            "styleUrls": [
                "./feed.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./feed.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FeedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./feed.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-search></app-search>\n<app-books-list></app-books-list>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-0cd94fbc94a83702e45bf987cb3b3f9074d69cd27e6ca2e4fbac0dc5b5047bd4dc3a9ce8a77f6bd9ab7ae3e6ca8e49b34bed529ca0da0fa428fec544a0324870",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-4cbcd3f8f000ac63bd8fa76afc9f3837bb44f1df778efa4935019c4628ef9a52646fb5c3cd2cb0b975061f19bd1a6e26c4a05b142d1d4c2311b484abd47e031c",
            "file": "src/app/auth/components/login/login.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "name",
                    "defaultValue": "new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^[a-zA-Z\\s]*$/)\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "submitUSer",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { LoginUser } from '../../store/auth.actions';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoginComponent implements OnInit {\n\n  name: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(/^[a-zA-Z\\s]*$/)\n  ]);\n\n  constructor(private store: Store) {}\n\n  ngOnInit(): void {\n  }\n\n  submitUSer(): void {\n    if (this.name.valid) {\n      this.store.dispatch(LoginUser({ name: this.name.value }));\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/styles/form.styles\";\n@import \"src/assets/styles/colors\";\n\n:host {\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  position: absolute;\n\n  .welcome-wrapper {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    min-width: 450px;\n    background: rgba(255, 255, 255, 0.70);\n    box-shadow: 0 0 20px #00000029;\n    border-radius: 20px;\n    padding: 55px 70px;\n    z-index: 1;\n\n    ::ng-deep .mat-form-field {\n      @extend %form-field;\n\n      // outline style\n      &.mat-form-field-appearance-outline { @extend %form-field-appearance-outline; }\n\n      // inner style\n      .mat-form-field-flex { @extend %mat-form-field-flex; }\n      &:last-of-type {\n        margin-top: 5px;\n      }\n    }\n\n    .submit-button {\n      @extend %submit-button;\n    }\n  }\n\n}\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-animated-background></app-animated-background>\n\n<div class=\"welcome-wrapper\">\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Name</mat-label>\n    <input\n      matInput\n      placeholder=\"Please insert your name\"\n      [formControl]=\"name\">\n    <mat-error *ngIf=\"name.hasError('required')\">Name is required</mat-error>\n    <mat-error *ngIf=\"name.hasError('pattern')\">This field accept latter's only</mat-error>\n  </mat-form-field>\n\n  <button\n    mat-flat-button\n    class=\"submit-button\"\n    (click)=\"submitUSer()\"\n    [disabled]=\"!name.valid\"\n  >login</button>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-432c9ae0bcf6e2e1f46701f7565a67376cb10145b7d049c5fe930cf8f075c6e02e24151589750b18cbaa8266f7c61393b95c4d833fbfd71ee228904aa014349f",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-9e34773c6e77ffe9586caf75958eccb3064d67a618afdc0809e6c82d09277f9870b83ed59eab78ccec5abe22f2f7567c26b69b5662b3a77696c2a0702567821a",
            "file": "src/app/search/components/search/search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [
                "./search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isWishListExists$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "name$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "searchControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "displayButton",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetSearchTerm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "searchBooks",
                    "args": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n\nimport { ClearSearch, SearchBooks } from '../../../feed/store/books.actions';\nimport { getName } from '../../../auth/store/auth.reducer';\nimport { isWishlistExists } from '../../../wishlist/store/wishlist.reducer';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchComponent implements OnInit {\n  searchControl: FormControl = new FormControl();\n  name$: Observable<string>;\n  isWishListExists$: Observable<boolean>;\n\n  constructor(private store: Store) {}\n\n  ngOnInit(): void {\n\n    this.name$ = this.store.select(getName);\n    this.isWishListExists$ = this.store.select(isWishlistExists);\n\n    this.searchControl.valueChanges.pipe(\n      debounceTime(500),\n      distinctUntilChanged()\n    ).subscribe((term: string) => term ?\n      this.searchBooks(term) :\n      this.store.dispatch(ClearSearch())\n    );\n  }\n\n  searchBooks(term: string): void {\n    this.store.dispatch(SearchBooks({ term }));\n  }\n\n  displayButton(): boolean {\n    return this.searchControl.value;\n  }\n\n  resetSearchTerm(): void {\n    this.searchControl.reset();\n    this.store.dispatch(ClearSearch());\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/styles/colors\";\n@import \"src/assets/styles/title.styles\";\n@import \"src/assets/styles/buttons.style\";\n\n:host ::ng-deep {\n  width: 50%;\n  display: flex;\n  margin: 50px auto 0;\n  flex-direction: column;\n  align-items: center;\n\n  h1 {\n    @extend %title;\n    width: 75%;\n    margin-bottom: 16px;\n  }\n\n  .mat-flat-button {\n    @extend %animated-button;\n    margin-bottom: 16px;\n  }\n\n  .mat-form-field {\n    width: 85%;\n\n    .mat-form-field-infix {\n      padding: .5em 0 1.3em 1.5em;\n\n      .mat-input-element {\n        caret-color: $dark-blue;\n        color: $dark-blue;\n      }\n\n      .mat-form-field-label-wrapper {\n        left: 1.5em;\n\n        .mat-form-field-label {\n          top: 1.35em;\n          color: $dark-blue;\n        }\n      }\n    }\n\n    .mat-form-field-flex {\n      background: $smoke-white;\n      align-items: center;\n      border-radius: 30px;\n\n      .mat-form-field-suffix {\n        .mat-button {\n          margin-right: 1.5em;\n          color: $dark-blue;\n        }\n      }\n    }\n\n    .mat-form-field-underline {\n      display: none;\n    }\n  }\n}\n",
                    "styleUrl": "./search.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>Hello {{name$ | async}}</h1>\n<a\n  *ngIf=\"isWishListExists$ | async\"\n  mat-flat-button\n  [routerLink]=\"['/wishlist']\">my wishlist</a>\n\n<mat-form-field floatLabel=\"never\">\n  <mat-label>Search for books</mat-label>\n  <input\n    matInput\n    placeholder=\"Search for books\"\n    (keyup.enter)=\"searchBooks($event.target.value)\"\n    [formControl]=\"searchControl\">\n\n  <button\n    (click)=\"resetSearchTerm()\"\n    *ngIf=\"displayButton()\"\n    mat-button\n    mat-icon-button\n    matSuffix>\n    <mat-icon>close</mat-icon>\n  </button>\n</mat-form-field>\n"
        },
        {
            "name": "WishlistComponent",
            "id": "component-WishlistComponent-0eadef33f278db0ccc4de0bf1884e584d289d50e2d4b3d48a198994eb74496dca651e8a9d3f6881bcc5aeb3a2a5680c8156d595c82313696453fa29afe377b89",
            "file": "src/app/wishlist/components/wishlist/wishlist.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-wishlist",
            "styleUrls": [
                "./wishlist.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./wishlist.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "name$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "placeholderImage",
                    "defaultValue": "'assets/no_image.jpg'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "wishlist$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<IWishListBookItemModel[]>",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeToWishList",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\n\nimport { IWishListBookItemModel } from '../../models/wishlist.model';\nimport { getWishlist } from '../../store/wishlist.reducer';\nimport { RemoveFromWishlist } from '../../store/wishlist.actions';\nimport { getName } from '../../../auth/store/auth.reducer';\n\n@Component({\n  selector: 'app-wishlist',\n  templateUrl: './wishlist.component.html',\n  styleUrls: ['./wishlist.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WishlistComponent implements OnInit {\n  placeholderImage = 'assets/no_image.jpg';\n  wishlist$: Observable<IWishListBookItemModel[]>;\n  name$: Observable<string>;\n\n  constructor(private store: Store) { }\n\n  ngOnInit(): void {\n    this.wishlist$ = this.store.select(getWishlist);\n    this.name$ = this.store.select(getName);\n  }\n\n  removeToWishList(id: string): void {\n    this.store.dispatch(RemoveFromWishlist({id}));\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"src/assets/styles/colors\";\n@import \"src/assets/styles/title.styles\";\n\n:host {\n  display: block;\n  padding: 24px;\n  width: 80vw;\n  max-width: 960px;\n  margin: 0 auto;\n\n  h1 { @extend %title }\n\n  .wishlist-item {\n    display: flex;\n    align-items: center;\n    box-shadow: rgba(0, 0, 0, 0.24) 0 3px 8px;\n    margin-bottom: 24px;\n    padding: 0 16px;\n\n    img {\n      clip-path: circle();\n      width: 60px;\n    }\n\n    p { margin: 0 16px; }\n\n    ::ng-deep .mat-mini-fab {\n      background: $red;\n      width: 32px;\n      height: 32px;\n      margin-left: auto;\n      box-shadow: none;\n\n      .mat-button-wrapper {\n        padding: 0;\n        display: flex;\n        justify-content: center;\n\n        .mat-icon {\n          color: $smoke-white;\n        }\n      }\n    }\n\n    h1 {\n      margin: 0;\n      color: $green;\n      font-size: 24px;\n    }\n\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n}\n\n",
                    "styleUrl": "./wishlist.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<a\n  mat-flat-button\n  [routerLink]=\"['/feed']\">\n  <mat-icon>arrow_back</mat-icon>\n  FEED</a>\n<h1>{{name$ | async}}s wishlist</h1>\n\n<ng-container *ngIf=\"wishlist$ | async as wishlist\">\n  <div\n    class=\"wishlist-item\"\n    *ngFor=\"let item of wishlist\">\n    <img\n      [src]=\"item.image ? item.image : placeholderImage\"\n      alt=\"Photo of {{item.title}}\">\n\n    <p>{{item.title}}</p>\n    <button\n      mat-mini-fab\n      matTooltip=\"Remove item\"\n      class=\"remove\"\n      (click)=\"removeToWishList(item.id)\">\n      <mat-icon>remove</mat-icon>\n    </button>\n  </div>\n</ng-container>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-7d64b8ee35d3e9e5d697e476ddb5ab3b893e25c33957324ea01006f390e5cfa5f8fc1de44fe18469bae309d12f8881d3f3625fdb855c8598733e18cafa46144f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\n\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { AppComponent } from './app.component';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { environment } from '../environments/environment';\nimport { reducers } from './store/state.index';\n\n@NgModule({\n  declarations: [ AppComponent ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    HttpClientModule,\n    StoreModule.forRoot(reducers),\n    EffectsModule.forRoot(),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    RouterModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-5339b38d44e3348aeaaa3fb27337f14bfec2f8f93c523a86edec0765284d9a6efe035605f7c1c415eff9ad09b68e726edf9edcb70df4061292a8ec2fe66f4450",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { UserAccessGuard } from './auth/guards/user-access.guard';\n\nconst routes: Routes = [\n  { path: '',  redirectTo: 'welcome', pathMatch: 'full' },\n  { path: 'welcome', loadChildren: () => \"import('./auth/auth.module').then(module => module.AuthModule)\" },\n  {\n    path: 'feed',\n    loadChildren: () => \"import('./feed/feed.module').then(module => module.FeedModule)\",\n    canActivate: [ UserAccessGuard ]\n  },\n  {\n    path: 'wishlist',\n    loadChildren: () => \"import('./wishlist/wishlist.module').then(module => module.WishlistModule)\",\n    canActivate: [ UserAccessGuard ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-d59ef52a1818e8f319ec839c155603ff6fe14b40f4461cb87786526941942807fbf2a3b20085c6b81f8d59ba70ee53f5ce5040532868498fb17a1979d042a98c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { StoreModule } from '@ngrx/store';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { AuthRoutingModule } from './auth-routing.module';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { AnimatedBackgroundComponent } from './components/animated-background/animated-background.component';\n\nimport { reducer } from './store/auth.reducer';\nimport { EffectsModule } from '@ngrx/effects';\nimport { AuthEffect } from './store/auth.effect';\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    AnimatedBackgroundComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    StoreModule.forFeature('auth', reducer),\n    EffectsModule.forFeature([AuthEffect]),\n  ]\n})\nexport class AuthModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AnimatedBackgroundComponent"
                        },
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthRoutingModule",
            "id": "module-AuthRoutingModule-878e73b02b9c81185fc3dca2db686c54cd7178a85992f59b2f236dc9acfd289abe3f896b125090a6307e1113062c9b5e29a93e54f60059c9a1184faf28ab0a3a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/auth/auth-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FeedModule",
            "id": "module-FeedModule-b74a8cd8998ec2028795ec9b0237ade37ac9dda58a1c3d3a0ee3c245ae48b50dfd8333f10d89102b72b5c2328ae73539c17f782a6547b214d8d64f40025fe3c7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/feed/feed.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { FeedRoutingModule } from './feed-routing.module';\nimport { SearchModule } from '../search/search.module';\n\nimport { ImageDirective } from './directives/image.directive';\n\nimport { FeedComponent } from './components/feed/feed.component';\nimport { BooksListComponent } from './components/books-list/books-list.component';\nimport { BookCardComponent } from './components/book-card/book-card.component';\nimport { BookDetailsComponent } from './components/book-details/book-details.component';\n\nimport { BooksEffect } from './store/books.effect';\nimport { reducer } from './store/books.reducer';\n\n@NgModule({\n  declarations: [\n    FeedComponent,\n    BooksListComponent,\n    BookCardComponent,\n    ImageDirective,\n    BookDetailsComponent,\n  ],\n  imports: [\n    CommonModule,\n    FeedRoutingModule,\n    MatCardModule,\n    MatButtonModule,\n    MatDialogModule,\n    StoreModule.forFeature('books', reducer),\n    EffectsModule.forFeature([BooksEffect]),\n    SearchModule,\n    MatIconModule,\n    MatTooltipModule,\n  ],\n})\nexport class FeedModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BookCardComponent"
                        },
                        {
                            "name": "BookDetailsComponent"
                        },
                        {
                            "name": "BooksListComponent"
                        },
                        {
                            "name": "FeedComponent"
                        },
                        {
                            "name": "ImageDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "FeedRoutingModule"
                        },
                        {
                            "name": "SearchModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "FeedRoutingModule",
            "id": "module-FeedRoutingModule-62aa3e39a6ecd4cccfe76f9ddffab6579d0ae8d0585a742d5cea0514f13008cb3fa5faef75a47d536f5b58553b581060c4741165e2ab6f0b195bc17e2c648fb1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/feed/feed-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FeedComponent } from './components/feed/feed.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: FeedComponent,\n  pathMatch: 'full'\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FeedRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SearchModule",
            "id": "module-SearchModule-0c57360e7acca547d95844c8b956cbfc33e8ccb8ddd93f49079c5efa7238c1b139283085f572ec52c9c8d8e3b66631337d3601ee5d23e5581518474e40fb2489",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/search/search.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { FlexModule } from '@angular/flex-layout';\n\nimport { SearchComponent } from './components/search/search.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [ SearchComponent ],\n  exports: [ SearchComponent ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        MatInputModule,\n        MatButtonModule,\n        FlexModule,\n        RouterModule,\n    ]\n})\nexport class SearchModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SearchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SearchComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WishlistModule",
            "id": "module-WishlistModule-3153ec6f41fb15cbda4cf177186c4c3f09667d13507ab828244af25a74fbc3c278265deb294bed65a13fcef142d73ae8300395d2b8d733f126bf6cc1fe3bc5fd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/wishlist/wishlist.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { WishlistComponent } from './components/wishlist/wishlist.component';\nimport { WishlistRoutingModule } from './wishlist-routing.module';\nimport { reducer } from './store/wishlist.reducer';\n\n@NgModule({\n  declarations: [\n    WishlistComponent\n  ],\n  imports: [\n    CommonModule,\n    WishlistRoutingModule,\n    StoreModule.forFeature('wishlist', reducer),\n    EffectsModule.forFeature([]),\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n  ]\n})\nexport class WishlistModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "WishlistComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "WishlistRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WishlistRoutingModule",
            "id": "module-WishlistRoutingModule-a25cc5250fa3431ab90dafa588df3ba6ac39b3928686d4029a5940f82a93a89ad416ed72bd3f763fd0962ea96d968d3dab5d32872c765f9f733e3bd7cbecc108",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/wishlist/wishlist-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { WishlistComponent } from './components/wishlist/wishlist.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: WishlistComponent,\n  pathMatch: 'full'\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WishlistRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "AddToWishlist",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/wishlist/store/wishlist.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  '[Wishlist] Add to wishlist',\n  props<IWishListBookItemModel>()\n)"
            },
            {
                "name": "authReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/store/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(\n    AuthActions.LoginUser,\n    (state, payload): State => ({\n      ...state,\n      name: payload.name\n    })\n  )\n)"
            },
            {
                "name": "authState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/store/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<State>('auth')"
            },
            {
                "name": "booksReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feed/store/books.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(\n    BooksActions.SearchBooks,\n    (state, payload): State => ({\n      term: payload.term,\n      booksList: null,\n      isLoading: true,\n      isError: false\n    })\n  ),\n  on(\n    BooksActions.SearchBooksSuccess,\n    (state, payload): State => ({\n      term: payload.term,\n      booksList: payload.booksList,\n      isLoading: false,\n      isError: false\n    })\n  ),\n  on(\n    BooksActions.SearchBooksFailed,\n    (state): State => ({\n      ...state,\n      booksList: null,\n      isLoading: false,\n      isError: true\n    })\n  ),\n  on(\n    BooksActions.ClearSearch,\n    (): State => ({\n      term: null,\n      booksList: null,\n      isLoading: null,\n      isError: null\n    })\n  )\n)"
            },
            {
                "name": "booksState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feed/store/books.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<State>('books')"
            },
            {
                "name": "ClearSearch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feed/store/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction('[Books] Clear search term')"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  serverUrl: 'http://localhost:3000',\n}"
            },
            {
                "name": "getBooksList",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feed/store/books.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(booksState, (state: IBooksModel) => state.booksList)"
            },
            {
                "name": "getName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/store/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(authState, (state: State) => state.name)"
            },
            {
                "name": "getWishlist",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/wishlist/store/wishlist.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n  wishListState,\n  (state: IWishListModel) => state.myList\n)"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/store/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Readonly<State>",
                "defaultValue": "{\n  name: 'David'\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feed/store/books.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Readonly<State>",
                "defaultValue": "{\n  term: null,\n  booksList: null,\n  isLoading: null,\n  isError: null\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/wishlist/store/wishlist.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Readonly<State>",
                "defaultValue": "{\n  myList: []\n}"
            },
            {
                "name": "isItemInWishlist",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/wishlist/store/wishlist.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(itemID: string) =>\n  createSelector(\n  wishListState,\n  (state: IWishListModel) => state.myList.some(item => item.id === itemID)\n)"
            },
            {
                "name": "isLoadingBooks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feed/store/books.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(booksState, (state: IBooksModel) => state.isLoading)"
            },
            {
                "name": "isWishlistExists",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/wishlist/store/wishlist.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createSelector(\n    wishListState,\n    (state: IWishListModel) => !!state.myList.length\n)"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoginUser",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/store/auth.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  '[Login] Login user',\n  props<{ name: string; }>()\n)"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "reducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/auth/store/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: State, action: Action): State => authReducer(state, action)"
            },
            {
                "name": "reducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feed/store/books.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: State, action: Action): State => booksReducer(state, action)"
            },
            {
                "name": "reducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/wishlist/store/wishlist.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(state: State, action: Action): State => wishListReducer(state, action)"
            },
            {
                "name": "reducers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/state.index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionReducerMap<IAppState>",
                "defaultValue": "{\n  books: fromBooks.reducer,\n  auth: fromAuth.reducer,\n  wishlist: fromWishlist.reducer\n}"
            },
            {
                "name": "RemoveFromWishlist",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/wishlist/store/wishlist.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  '[Wishlist] Remove from wishlist',\n  props<{id: string}>()\n)"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "SearchBooks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feed/store/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  '[Books] Search',\n  props<ISearchRequestModel>()\n)"
            },
            {
                "name": "SearchBooksFailed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feed/store/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  '[Books] Search failed',\n  props<{ error: Error }>()\n)"
            },
            {
                "name": "SearchBooksSuccess",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/feed/store/books.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createAction(\n  '[Books] Search success',\n  props<ISearchResponseModel>()\n)"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "wishListReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/wishlist/store/wishlist.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createReducer(\n  initialState,\n  on(\n    WishlistActions.AddToWishlist,\n    (state, payload): State => ({\n      myList: [\n        ...state.myList,\n        payload\n      ]\n    })\n  ),\n  on(\n    WishlistActions.RemoveFromWishlist,\n    (state, payload): State => ({\n      myList: state.myList.filter(item => item.id !== payload.id)\n    })\n  )\n)"
            },
            {
                "name": "wishListState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/wishlist/store/wishlist.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createFeatureSelector<State>('wishlist')"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "State",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/auth/store/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "State",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "IBooksModel",
                "file": "src/app/feed/store/books.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "State",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "IWishListModel",
                "file": "src/app/wishlist/store/wishlist.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/wishlist/store/wishlist.actions.ts": [
                {
                    "name": "AddToWishlist",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/wishlist/store/wishlist.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  '[Wishlist] Add to wishlist',\n  props<IWishListBookItemModel>()\n)"
                },
                {
                    "name": "RemoveFromWishlist",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/wishlist/store/wishlist.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  '[Wishlist] Remove from wishlist',\n  props<{id: string}>()\n)"
                }
            ],
            "src/app/auth/store/auth.reducer.ts": [
                {
                    "name": "authReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/store/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(\n    AuthActions.LoginUser,\n    (state, payload): State => ({\n      ...state,\n      name: payload.name\n    })\n  )\n)"
                },
                {
                    "name": "authState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/store/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<State>('auth')"
                },
                {
                    "name": "getName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/store/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(authState, (state: State) => state.name)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/store/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Readonly<State>",
                    "defaultValue": "{\n  name: 'David'\n}"
                },
                {
                    "name": "reducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/store/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: State, action: Action): State => authReducer(state, action)"
                }
            ],
            "src/app/feed/store/books.reducer.ts": [
                {
                    "name": "booksReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feed/store/books.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(\n    BooksActions.SearchBooks,\n    (state, payload): State => ({\n      term: payload.term,\n      booksList: null,\n      isLoading: true,\n      isError: false\n    })\n  ),\n  on(\n    BooksActions.SearchBooksSuccess,\n    (state, payload): State => ({\n      term: payload.term,\n      booksList: payload.booksList,\n      isLoading: false,\n      isError: false\n    })\n  ),\n  on(\n    BooksActions.SearchBooksFailed,\n    (state): State => ({\n      ...state,\n      booksList: null,\n      isLoading: false,\n      isError: true\n    })\n  ),\n  on(\n    BooksActions.ClearSearch,\n    (): State => ({\n      term: null,\n      booksList: null,\n      isLoading: null,\n      isError: null\n    })\n  )\n)"
                },
                {
                    "name": "booksState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feed/store/books.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<State>('books')"
                },
                {
                    "name": "getBooksList",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feed/store/books.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(booksState, (state: IBooksModel) => state.booksList)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feed/store/books.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Readonly<State>",
                    "defaultValue": "{\n  term: null,\n  booksList: null,\n  isLoading: null,\n  isError: null\n}"
                },
                {
                    "name": "isLoadingBooks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feed/store/books.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(booksState, (state: IBooksModel) => state.isLoading)"
                },
                {
                    "name": "reducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feed/store/books.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: State, action: Action): State => booksReducer(state, action)"
                }
            ],
            "src/app/feed/store/books.actions.ts": [
                {
                    "name": "ClearSearch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feed/store/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction('[Books] Clear search term')"
                },
                {
                    "name": "SearchBooks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feed/store/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  '[Books] Search',\n  props<ISearchRequestModel>()\n)"
                },
                {
                    "name": "SearchBooksFailed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feed/store/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  '[Books] Search failed',\n  props<{ error: Error }>()\n)"
                },
                {
                    "name": "SearchBooksSuccess",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/feed/store/books.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  '[Books] Search success',\n  props<ISearchResponseModel>()\n)"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  serverUrl: 'http://localhost:3000',\n}"
                }
            ],
            "src/app/wishlist/store/wishlist.reducer.ts": [
                {
                    "name": "getWishlist",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/wishlist/store/wishlist.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n  wishListState,\n  (state: IWishListModel) => state.myList\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/wishlist/store/wishlist.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Readonly<State>",
                    "defaultValue": "{\n  myList: []\n}"
                },
                {
                    "name": "isItemInWishlist",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/wishlist/store/wishlist.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(itemID: string) =>\n  createSelector(\n  wishListState,\n  (state: IWishListModel) => state.myList.some(item => item.id === itemID)\n)"
                },
                {
                    "name": "isWishlistExists",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/wishlist/store/wishlist.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createSelector(\n    wishListState,\n    (state: IWishListModel) => !!state.myList.length\n)"
                },
                {
                    "name": "reducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/wishlist/store/wishlist.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(state: State, action: Action): State => wishListReducer(state, action)"
                },
                {
                    "name": "wishListReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/wishlist/store/wishlist.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createReducer(\n  initialState,\n  on(\n    WishlistActions.AddToWishlist,\n    (state, payload): State => ({\n      myList: [\n        ...state.myList,\n        payload\n      ]\n    })\n  ),\n  on(\n    WishlistActions.RemoveFromWishlist,\n    (state, payload): State => ({\n      myList: state.myList.filter(item => item.id !== payload.id)\n    })\n  )\n)"
                },
                {
                    "name": "wishListState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/wishlist/store/wishlist.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createFeatureSelector<State>('wishlist')"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/auth/store/auth.actions.ts": [
                {
                    "name": "LoginUser",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/auth/store/auth.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createAction(\n  '[Login] Login user',\n  props<{ name: string; }>()\n)"
                }
            ],
            "src/app/store/state.index.ts": [
                {
                    "name": "reducers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/state.index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionReducerMap<IAppState>",
                    "defaultValue": "{\n  books: fromBooks.reducer,\n  auth: fromAuth.reducer,\n  wishlist: fromWishlist.reducer\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/auth/store/auth.reducer.ts": [
                {
                    "name": "State",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/auth/store/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/feed/store/books.reducer.ts": [
                {
                    "name": "State",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "IBooksModel",
                    "file": "src/app/feed/store/books.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/wishlist/store/wishlist.reducer.ts": [
                {
                    "name": "State",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "IWishListModel",
                    "file": "src/app/wishlist/store/wishlist.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "welcome",
                        "pathMatch": "full"
                    },
                    {
                        "path": "welcome",
                        "loadChildren": "./auth/auth.module#AuthModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/auth/auth-routing.module.ts",
                                        "module": "AuthRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "LoginComponent"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "AuthModule"
                            }
                        ]
                    },
                    {
                        "path": "feed",
                        "loadChildren": "./feed/feed.module#FeedModule",
                        "canActivate": [
                            "UserAccessGuard"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/feed/feed-routing.module.ts",
                                        "module": "FeedRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "FeedComponent",
                                                "pathMatch": "full"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "FeedModule"
                            }
                        ]
                    },
                    {
                        "path": "wishlist",
                        "loadChildren": "./wishlist/wishlist.module#WishlistModule",
                        "canActivate": [
                            "UserAccessGuard"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/app/wishlist/wishlist-routing.module.ts",
                                        "module": "WishlistRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "WishlistComponent",
                                                "pathMatch": "full"
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "WishlistModule"
                            }
                        ]
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/components/animated-background/animated-background.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AnimatedBackgroundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/components/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/guards/user-access.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "UserAccessGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/models/shape.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ShapesModel",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoginUser",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.effect.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "authState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/auth/store/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/components/book-card/book-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/components/book-details/book-details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/components/books-list/books-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BooksListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/components/feed/feed.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FeedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/directives/image.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ImageDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/models/books.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBookItemModel",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/models/books.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IBooksModel",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/models/books.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISearchRequestModel",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/models/books.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ISearchResponseModel",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/services/books.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BooksService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/store/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ClearSearch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/store/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchBooks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/store/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchBooksFailed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/store/books.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SearchBooksSuccess",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/store/books.effect.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "BooksEffect",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/store/books.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "booksReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/store/books.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "booksState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/store/books.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getBooksList",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/store/books.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/store/books.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isLoadingBooks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/feed/store/books.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/search/components/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/store/state.index.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IAppState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/state.index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/wishlist/components/wishlist/wishlist.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WishlistComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/wishlist/models/wishlist.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IWishListBookItemModel",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/wishlist/models/wishlist.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IWishListModel",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/wishlist/store/wishlist.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AddToWishlist",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/wishlist/store/wishlist.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RemoveFromWishlist",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/wishlist/store/wishlist.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getWishlist",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/wishlist/store/wishlist.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/wishlist/store/wishlist.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isItemInWishlist",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/wishlist/store/wishlist.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isWishlistExists",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/wishlist/store/wishlist.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "reducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/wishlist/store/wishlist.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "wishListReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/wishlist/store/wishlist.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "wishListState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 85,
                "coverageCount": "6/7",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}